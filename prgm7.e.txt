What Is Ansible?
Ansible is an open-source IT automation and configuration management tool. It allows you to
manage multiple servers and perform tasks such as:
• Configuration Management: Automate the configuration of servers.
• Application Deployment: Deploy applications consistently.
• Orchestration: Coordinate complex IT workflows and processes.

Key Concepts in Ansible
• Inventory:
An inventory is a file (usually in INI or YAML format) that lists the hosts (or groups
of hosts) you want to manage. It tells Ansible which machines to target.
• Playbook:
A playbook is a YAML file that defines a set of tasks to be executed on your target
hosts. It is the heart of Ansible automation. In a playbook, you specify:
o Hosts: The target machines (or groups) on which the tasks should run.
o Tasks: A list of actions (using modules) that should be executed.
o Modules: Reusable, standalone scripts that perform specific actions (e.g.,
installing packages, copying files, configuring services).
• Modules:
Ansible comes with a large collection of built-in modules (such as apt, yum, copy,
service, etc.). These modules perform specific tasks on target hosts. You can also
write custom modules if needed.

Why Use Ansible?

.Agentless:-no agent is required torun ssh it will be know while doing azure devops program
.Simplicity:-east to read write understand
.Idempotence:running the same playbook
multiple times yields the same result, ensuring consistency
.Scalability:-Ansible can manage a small number of servers to large infrastructures with
hundreds or thousands of nodes.






ansible-playbook playbooks/apache-install.yml
 steps:
1.sudo apt update
2.sudo apt upgrade -y
3.sudo apt install ansible -y
4.ansible --version

Step 1: Create an Inventory File
1. Open your text editor to create a file called hosts.ini:
2. nano hosts.ini
3. Add the following content to define the local host:
 [local]
 localhost ansible_connection=local
 Explanation:
▪ [local] is a group name.
▪ localhost is the target host.
▪ ansible_connection=local tells Ansible to execute commands on the
local machine without SSH.

6. Save the file by pressing Ctrl+O then Enter, and exit with Ctrl+X.

Step 2: Create the Playbook File
1. Open your text editor to create a file called setup.yml:
2. nano setup.yml


- name: Basic Server Setup
  hosts: local
  become: true  # Optional: if your tasks need root access
  tasks:
    - name: Example task
      debug:
        msg: "Hello, this is a basic setup"

Step 3: Execute the Playbook
In your terminal, run the following command:
ansible-playbook -i hosts.ini setup.yml

ansible-playbook -i hosts.ini setup.yml --ask-become-pass


